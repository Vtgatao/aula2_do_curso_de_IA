{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Vtgatao/aula2_do_curso_de_IA/blob/main/AULA_3_PR%C3%81TICA.ipynb.complet\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BKqhC3rjKn5f"
      },
      "source": [
        "<a href=\"TAIL\"><img src=\"https://i.imgur.com/GRTE0OG.png\" width=\"150\" title=\"Tail Logo\" />\n",
        " </a>\n",
        "\n",
        "# <font color =\"#00b8ff\">Aula 3 - IAA-PG</font>"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "SYVK9Saus06z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nome:"
      ],
      "metadata": {
        "id": "gCw7FqlRWxts"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AIrg1xVuD7Vx"
      },
      "source": [
        "## Introdução"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E9x_PYe2Kx0H"
      },
      "source": [
        "O Pandas é uma biblioteca do Python que facilita (e muito) a manipulação de CSVs, arquivos separados por vírgula, que podem ser interpretados como tabelas. Exitem outras duas formas para analisar arquivos CSVs, com métodos nativos e com a biblioteca CSV, mas ambas são poucos práticas para esse intuito."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Vamos então iniciar umas manipulações básicas sobre o análise de dados e o que vimos em aula."
      ],
      "metadata": {
        "id": "wLlN4_vgB8VK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Quando passar na ala de código basta apertar o play para rodar"
      ],
      "metadata": {
        "id": "l2MtF1b4z8E3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "CAkdErk3c0Xg",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0ca6a64e-d59b-481f-e7d5-3ccadf5f0627"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2025-03-28 17:17:45--  https://docs.google.com/uc?export=download&confirm=&id=1ra8ap9gWxB1vMTZ0PeZSmEmrnKa3Qwlj\n",
            "Resolving docs.google.com (docs.google.com)... 142.250.153.100, 142.250.153.138, 142.250.153.101, ...\n",
            "Connecting to docs.google.com (docs.google.com)|142.250.153.100|:443... connected.\n",
            "HTTP request sent, awaiting response... 303 See Other\n",
            "Location: https://drive.usercontent.google.com/download?id=1ra8ap9gWxB1vMTZ0PeZSmEmrnKa3Qwlj&export=download [following]\n",
            "--2025-03-28 17:17:45--  https://drive.usercontent.google.com/download?id=1ra8ap9gWxB1vMTZ0PeZSmEmrnKa3Qwlj&export=download\n",
            "Resolving drive.usercontent.google.com (drive.usercontent.google.com)... 74.125.128.132, 2a00:1450:4013:c02::84\n",
            "Connecting to drive.usercontent.google.com (drive.usercontent.google.com)|74.125.128.132|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 110480 (108K) [application/octet-stream]\n",
            "Saving to: ‘school-shootings-data.csv’\n",
            "\n",
            "school-shootings-da 100%[===================>] 107.89K  --.-KB/s    in 0.001s  \n",
            "\n",
            "2025-03-28 17:17:48 (82.1 MB/s) - ‘school-shootings-data.csv’ saved [110480/110480]\n",
            "\n"
          ]
        }
      ],
      "source": [
        "!wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=FILEID' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=1ra8ap9gWxB1vMTZ0PeZSmEmrnKa3Qwlj\" -O school-shootings-data.csv && rm -rf /tmp/cookies.txt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "bjCH-_JZLlPh"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "data = pd.read_csv(\"/content/school-shootings-data.csv\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Rw8GkmSnMiwh"
      },
      "source": [
        "A célula acima possui duas declarações importantes:\n",
        "\n",
        "1- O código importa a biblioteca pandas e \"apelida\" ela de \"pd\", essa é uma convenção amplamente utilizada.\n",
        "\n",
        "2- A função `read_csv()` é chamada e recebe como argumento o endereço de um arquivo CSV, essa função pega esse CSV e transforma ele em um DataFrame (Tabela do Pandas) e atribui à variável data.\n",
        "\n",
        "Veja abaixo o DataFrame da variável data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "2Zel7lR8N0kd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "outputId": "12c2bcb1-2c63-4ea8-f0ee-40a965724f00"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   uid nces_school_id                  school_name  nces_district_id  \\\n",
              "0    1   080480000707        Columbine High School          804800.0   \n",
              "1    2   220054000422  Scotlandville Middle School         2200540.0   \n",
              "2    3   130441001591         Heritage High School         1304410.0   \n",
              "3    4   421899003847     John Bartram High School         4218990.0   \n",
              "4    5   250279000225       Dorchester High School         2502790.0   \n",
              "\n",
              "                          district_name       date school_year  year  \\\n",
              "0                  Jefferson County R-1  4/20/1999   1998-1999  1999   \n",
              "1  East Baton Rouge Parish School Board  4/22/1999   1998-1999  1999   \n",
              "2                       Rockdale County  5/20/1999   1998-1999  1999   \n",
              "3                  Philadelphia City SD  10/4/1999   1999-2000  1999   \n",
              "4                                Boston  11/3/1999   1999-2000  1999   \n",
              "\n",
              "       time day_of_week  ...        lat        long staffing low_grade  \\\n",
              "0  11:19 AM     Tuesday  ...  39.603910 -105.075000     89.6         9   \n",
              "1  12:30 PM    Thursday  ...  30.529958  -91.169966     39.0         6   \n",
              "2   8:03 AM    Thursday  ...  33.626922  -84.047960     84.0         9   \n",
              "3  10:00 AM      Monday  ...  39.921509  -75.234108     41.0         9   \n",
              "4   7:40 AM   Wednesday  ...  42.285268  -71.075901      NaN         9   \n",
              "\n",
              "   high_grade  lunch                   county state_fips  county_fips ulocale  \n",
              "0          12     41         Jefferson County          8         8059    21.0  \n",
              "1           8    495  East Baton Rouge Parish         22        22033    12.0  \n",
              "2          12    125          Rockdale County         13        13247    21.0  \n",
              "3          12   2007      Philadelphia County         42        42101    11.0  \n",
              "4          12    543           Suffolk County         25        25025    11.0  \n",
              "\n",
              "[5 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-77ce2d96-a3d3-4773-a357-900a409f3b9d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>uid</th>\n",
              "      <th>nces_school_id</th>\n",
              "      <th>school_name</th>\n",
              "      <th>nces_district_id</th>\n",
              "      <th>district_name</th>\n",
              "      <th>date</th>\n",
              "      <th>school_year</th>\n",
              "      <th>year</th>\n",
              "      <th>time</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>...</th>\n",
              "      <th>lat</th>\n",
              "      <th>long</th>\n",
              "      <th>staffing</th>\n",
              "      <th>low_grade</th>\n",
              "      <th>high_grade</th>\n",
              "      <th>lunch</th>\n",
              "      <th>county</th>\n",
              "      <th>state_fips</th>\n",
              "      <th>county_fips</th>\n",
              "      <th>ulocale</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>080480000707</td>\n",
              "      <td>Columbine High School</td>\n",
              "      <td>804800.0</td>\n",
              "      <td>Jefferson County R-1</td>\n",
              "      <td>4/20/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>11:19 AM</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>...</td>\n",
              "      <td>39.603910</td>\n",
              "      <td>-105.075000</td>\n",
              "      <td>89.6</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>Jefferson County</td>\n",
              "      <td>8</td>\n",
              "      <td>8059</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>220054000422</td>\n",
              "      <td>Scotlandville Middle School</td>\n",
              "      <td>2200540.0</td>\n",
              "      <td>East Baton Rouge Parish School Board</td>\n",
              "      <td>4/22/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>12:30 PM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>30.529958</td>\n",
              "      <td>-91.169966</td>\n",
              "      <td>39.0</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>495</td>\n",
              "      <td>East Baton Rouge Parish</td>\n",
              "      <td>22</td>\n",
              "      <td>22033</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>130441001591</td>\n",
              "      <td>Heritage High School</td>\n",
              "      <td>1304410.0</td>\n",
              "      <td>Rockdale County</td>\n",
              "      <td>5/20/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>8:03 AM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>33.626922</td>\n",
              "      <td>-84.047960</td>\n",
              "      <td>84.0</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>125</td>\n",
              "      <td>Rockdale County</td>\n",
              "      <td>13</td>\n",
              "      <td>13247</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>421899003847</td>\n",
              "      <td>John Bartram High School</td>\n",
              "      <td>4218990.0</td>\n",
              "      <td>Philadelphia City SD</td>\n",
              "      <td>10/4/1999</td>\n",
              "      <td>1999-2000</td>\n",
              "      <td>1999</td>\n",
              "      <td>10:00 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>39.921509</td>\n",
              "      <td>-75.234108</td>\n",
              "      <td>41.0</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>2007</td>\n",
              "      <td>Philadelphia County</td>\n",
              "      <td>42</td>\n",
              "      <td>42101</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>250279000225</td>\n",
              "      <td>Dorchester High School</td>\n",
              "      <td>2502790.0</td>\n",
              "      <td>Boston</td>\n",
              "      <td>11/3/1999</td>\n",
              "      <td>1999-2000</td>\n",
              "      <td>1999</td>\n",
              "      <td>7:40 AM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>42.285268</td>\n",
              "      <td>-71.075901</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>543</td>\n",
              "      <td>Suffolk County</td>\n",
              "      <td>25</td>\n",
              "      <td>25025</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77ce2d96-a3d3-4773-a357-900a409f3b9d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-77ce2d96-a3d3-4773-a357-900a409f3b9d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-77ce2d96-a3d3-4773-a357-900a409f3b9d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1529029d-d383-499d-9ed5-605a18d111d9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1529029d-d383-499d-9ed5-605a18d111d9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1529029d-d383-499d-9ed5-605a18d111d9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "data.head(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E3nlakB_Zld1"
      },
      "source": [
        "A função `.head()` e `.tail()` são responsaveis por verem o inicio (head) ou o final (tail) de uma planilha sem precisar ver toda a tabela de uma vez, alem de pode escolher quantas linhas você deseja ver, no caso do exemplo, 5 linhas. <br>\n",
        "\n",
        "> Essa função pode ser usada para dividir a tabela em partes menores"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-4HPVNHROH-1"
      },
      "source": [
        "Sem nenhum mistério, esse é o grande intuito do Pandas, mexer com tabelas. Lembre-se que uma das grandes aplicações do Python é a ciência de dados, então entender o Pandas vai te tornar um(a) grande programador(a) em Python.\n",
        "E a partir desses dados tratados você pode realizar alguns métodos para inteligência artificial.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "87DEEpelGtWr"
      },
      "source": [
        "Vamos testar a função `.tail()` ? mostre as 10 ultimas colunas do dataset."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "Y8E04p9oG_q2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 742
        },
        "outputId": "2f95283d-b58b-46d3-e695-9e3e3ca76248"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     uid nces_school_id                             school_name  \\\n",
              "377  380       A0503352                     The Covenant School   \n",
              "378  383   510324002081                George Wythe High School   \n",
              "379  384   470222000822                        West High School   \n",
              "380  385   260019501104      International Academy of Flint K12   \n",
              "381  388   320006000029                         Von Tobel Ed MS   \n",
              "382  386   421899007517  E. Washington Rhodes Elementary School   \n",
              "383  387   110003000008                   Roosevelt High School   \n",
              "384  390       00600937                         St. John's Prep   \n",
              "385  389   421917006047                 Oliver Citywide Academy   \n",
              "386  391   260021001494         Michigan Collegiate High School   \n",
              "\n",
              "     nces_district_id                        district_name       date  \\\n",
              "377               NaN                                  NaN  3/27/2023   \n",
              "378         5103240.0              Richmond City Pblc Schs  4/27/2023   \n",
              "379         4702220.0                          Knox County  4/28/2023   \n",
              "380         2600195.0       International Academy of Flint   5/2/2023   \n",
              "381         3200060.0         Clark County School District   5/8/2023   \n",
              "382         4218990.0                 Philadelphia City Sd   5/8/2023   \n",
              "383         1100030.0  District Of Columbia Public Schools  5/17/2023   \n",
              "384               NaN                                  NaN  5/22/2023   \n",
              "385         4219170.0                        Pittsburgh Sd  5/24/2023   \n",
              "386         2600210.0            Conner Creek Academy East   6/5/2023   \n",
              "\n",
              "    school_year  year      time day_of_week  ...        lat        long  \\\n",
              "377   2022-2023  2023  10:13 AM      Monday  ...  36.092868  -86.825266   \n",
              "378   2022-2023  2023  12:02 PM    Thursday  ...  37.510274  -77.483075   \n",
              "379   2022-2023  2023   9:20 AM      Friday  ...  35.948500  -83.973000   \n",
              "380   2022-2023  2023   3:30 PM     Tuesday  ...  42.996600  -83.678500   \n",
              "381   2022-2023  2023  12:30 PM      Monday  ...  36.204180 -115.097412   \n",
              "382   2022-2023  2023  11:30 AM      Monday  ...  40.002800  -75.178100   \n",
              "383   2022-2023  2023   2:25 PM   Wednesday  ...  38.942971  -77.029177   \n",
              "384   2022-2023  2023       NaN      Monday  ...  42.582682  -70.952603   \n",
              "385   2022-2023  2023   7:30 AM   Wednesday  ...  40.464327  -80.024121   \n",
              "386   2022-2023  2023   2:40 PM      Monday  ...  42.522585  -83.066681   \n",
              "\n",
              "    staffing low_grade  high_grade  lunch                county state_fips  \\\n",
              "377    15.00        PK           6    NaN       Davidson County         47   \n",
              "378    71.84         9          12   1116         Richmond City         51   \n",
              "379    85.50         9          12    303           Knox County         47   \n",
              "380    49.00        PK          12    787        Genesee County         26   \n",
              "381      NaN         6           8   1051          Clark County         32   \n",
              "382    41.37        KG           8    403   Philadelphia County         42   \n",
              "383    67.90         9          12    392  District Of Columbia         11   \n",
              "384   176.30         6          12    NaN          Essex County         25   \n",
              "385    22.63         3          12     88      Allegheny County         42   \n",
              "386    24.84         6          12    595         Macomb County         26   \n",
              "\n",
              "     county_fips ulocale  \n",
              "377        47037    11.0  \n",
              "378        51760    12.0  \n",
              "379        47093    12.0  \n",
              "380        26049    13.0  \n",
              "381        32003    21.0  \n",
              "382        42101    11.0  \n",
              "383        11001    11.0  \n",
              "384        25009    21.0  \n",
              "385        42003    11.0  \n",
              "386        26099    12.0  \n",
              "\n",
              "[10 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f93b16b1-3a4b-4eee-90aa-ff604a99d747\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>uid</th>\n",
              "      <th>nces_school_id</th>\n",
              "      <th>school_name</th>\n",
              "      <th>nces_district_id</th>\n",
              "      <th>district_name</th>\n",
              "      <th>date</th>\n",
              "      <th>school_year</th>\n",
              "      <th>year</th>\n",
              "      <th>time</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>...</th>\n",
              "      <th>lat</th>\n",
              "      <th>long</th>\n",
              "      <th>staffing</th>\n",
              "      <th>low_grade</th>\n",
              "      <th>high_grade</th>\n",
              "      <th>lunch</th>\n",
              "      <th>county</th>\n",
              "      <th>state_fips</th>\n",
              "      <th>county_fips</th>\n",
              "      <th>ulocale</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>380</td>\n",
              "      <td>A0503352</td>\n",
              "      <td>The Covenant School</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3/27/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>10:13 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>36.092868</td>\n",
              "      <td>-86.825266</td>\n",
              "      <td>15.00</td>\n",
              "      <td>PK</td>\n",
              "      <td>6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Davidson County</td>\n",
              "      <td>47</td>\n",
              "      <td>47037</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>383</td>\n",
              "      <td>510324002081</td>\n",
              "      <td>George Wythe High School</td>\n",
              "      <td>5103240.0</td>\n",
              "      <td>Richmond City Pblc Schs</td>\n",
              "      <td>4/27/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>12:02 PM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>37.510274</td>\n",
              "      <td>-77.483075</td>\n",
              "      <td>71.84</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>1116</td>\n",
              "      <td>Richmond City</td>\n",
              "      <td>51</td>\n",
              "      <td>51760</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>384</td>\n",
              "      <td>470222000822</td>\n",
              "      <td>West High School</td>\n",
              "      <td>4702220.0</td>\n",
              "      <td>Knox County</td>\n",
              "      <td>4/28/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>9:20 AM</td>\n",
              "      <td>Friday</td>\n",
              "      <td>...</td>\n",
              "      <td>35.948500</td>\n",
              "      <td>-83.973000</td>\n",
              "      <td>85.50</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>303</td>\n",
              "      <td>Knox County</td>\n",
              "      <td>47</td>\n",
              "      <td>47093</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>385</td>\n",
              "      <td>260019501104</td>\n",
              "      <td>International Academy of Flint K12</td>\n",
              "      <td>2600195.0</td>\n",
              "      <td>International Academy of Flint</td>\n",
              "      <td>5/2/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>3:30 PM</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>...</td>\n",
              "      <td>42.996600</td>\n",
              "      <td>-83.678500</td>\n",
              "      <td>49.00</td>\n",
              "      <td>PK</td>\n",
              "      <td>12</td>\n",
              "      <td>787</td>\n",
              "      <td>Genesee County</td>\n",
              "      <td>26</td>\n",
              "      <td>26049</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>388</td>\n",
              "      <td>320006000029</td>\n",
              "      <td>Von Tobel Ed MS</td>\n",
              "      <td>3200060.0</td>\n",
              "      <td>Clark County School District</td>\n",
              "      <td>5/8/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>12:30 PM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>36.204180</td>\n",
              "      <td>-115.097412</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>1051</td>\n",
              "      <td>Clark County</td>\n",
              "      <td>32</td>\n",
              "      <td>32003</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>386</td>\n",
              "      <td>421899007517</td>\n",
              "      <td>E. Washington Rhodes Elementary School</td>\n",
              "      <td>4218990.0</td>\n",
              "      <td>Philadelphia City Sd</td>\n",
              "      <td>5/8/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>11:30 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>40.002800</td>\n",
              "      <td>-75.178100</td>\n",
              "      <td>41.37</td>\n",
              "      <td>KG</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>Philadelphia County</td>\n",
              "      <td>42</td>\n",
              "      <td>42101</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>387</td>\n",
              "      <td>110003000008</td>\n",
              "      <td>Roosevelt High School</td>\n",
              "      <td>1100030.0</td>\n",
              "      <td>District Of Columbia Public Schools</td>\n",
              "      <td>5/17/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>2:25 PM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>38.942971</td>\n",
              "      <td>-77.029177</td>\n",
              "      <td>67.90</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>392</td>\n",
              "      <td>District Of Columbia</td>\n",
              "      <td>11</td>\n",
              "      <td>11001</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>390</td>\n",
              "      <td>00600937</td>\n",
              "      <td>St. John's Prep</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5/22/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>42.582682</td>\n",
              "      <td>-70.952603</td>\n",
              "      <td>176.30</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Essex County</td>\n",
              "      <td>25</td>\n",
              "      <td>25009</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>389</td>\n",
              "      <td>421917006047</td>\n",
              "      <td>Oliver Citywide Academy</td>\n",
              "      <td>4219170.0</td>\n",
              "      <td>Pittsburgh Sd</td>\n",
              "      <td>5/24/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>7:30 AM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>40.464327</td>\n",
              "      <td>-80.024121</td>\n",
              "      <td>22.63</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>88</td>\n",
              "      <td>Allegheny County</td>\n",
              "      <td>42</td>\n",
              "      <td>42003</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>391</td>\n",
              "      <td>260021001494</td>\n",
              "      <td>Michigan Collegiate High School</td>\n",
              "      <td>2600210.0</td>\n",
              "      <td>Conner Creek Academy East</td>\n",
              "      <td>6/5/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>2:40 PM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>42.522585</td>\n",
              "      <td>-83.066681</td>\n",
              "      <td>24.84</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>595</td>\n",
              "      <td>Macomb County</td>\n",
              "      <td>26</td>\n",
              "      <td>26099</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f93b16b1-3a4b-4eee-90aa-ff604a99d747')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f93b16b1-3a4b-4eee-90aa-ff604a99d747 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f93b16b1-3a4b-4eee-90aa-ff604a99d747');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7bb79135-2007-4cc6-9687-e054c388bcd1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7bb79135-2007-4cc6-9687-e054c388bcd1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7bb79135-2007-4cc6-9687-e054c388bcd1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "#Seu código aqui\n",
        "data.tail(10)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jMxzLpWhOr0x"
      },
      "source": [
        "## Analisando o DataSet"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F9IA2a7gOuar"
      },
      "source": [
        "Teoria pode ser muito cansativo, então vamos colocar um pouco de prática aqui, você vai fazer um interessante trabalho de estatístico(a). A tabela apresentada na variável data é um DataFrame que cataloga dados de Todos os tiroteios em escolas dos EUA desde o massacre de Columbine High em 20 de abril de 1999. É um tema bem complexo e polêmico que os cientistas de dados tem que tratar em seu trabalho."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Hh3qwbt3kwvg"
      },
      "source": [
        "#### Descrição das Colunas:\n",
        "\n",
        "* uid - Identificador exclusivo para cada linha\n",
        "* nces_school_id - código de identificação da escola\n",
        "* school_name - Nome da escola\n",
        "* nces_district_id - Identificador do distrito do nces\n",
        "* district_name - Nome do distrito\n",
        "* date - Data do Ocorrido\n",
        "* school_year - Períodos da escola\n",
        "* year - Ano do ocorrido\n",
        "* time - Horário do ocorrido\n",
        "* day_of_week - Dia da semana\n",
        "* city - Cidade da ocorrência\n",
        "* state - Estado da ocorrência\n",
        "* school_type - Tipo de escola (Publica ou particular)\n",
        "* enrollment - matriculados\n",
        "* killed - Quantidade de vítimas fatais\n",
        "* injured - Feridos não fatais\n",
        "* shooting_type - Motivo do tiro\n",
        "* age_shooter1 - Idade do Atirados\n",
        "* gender_shooter1 - Sexo do atirador\n",
        "* race_ethnicity_shooter - Etnia do atirador\n",
        "* shooter_relationsship -Relação vitima-atirador\n",
        "* white - Brancos assassinados\n",
        "* black - Negros assassinados\n",
        "* hispanic - Latinos assassinados\n",
        "* asian - Asiáticos assassinados\n",
        "* american_indian_alaska_native - Indígena americano nativo do alasca assassinados\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "93X6Xbn7PZ_L"
      },
      "source": [
        "### Dimensionando a tabela"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QABTquWOPgpa"
      },
      "source": [
        "Ok, temos a tabela na variável data mas não sabemos algumas de suas características fundamentais, como tamanho, colunas etc.\n",
        "\n",
        "Comece dimensionando o DataFrame, diga quantas linhas e colunas ele têm, recomendo a utilização do método `.shape`.\n",
        "\n",
        "utilize as variáveis linhas e colunas."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "LC-uBCAIQ7Xt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5c2b1561-f729-4468-ae5e-9eb523407a50"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(387, 50)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "#Seu código aqui\n",
        "data.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AO75VLg8Q-hS"
      },
      "source": [
        "Saber o tamanho do DataFrame é um passo importante, mas também é fundamental entender que tipo de informação ele carrega, que está armazenado nas colunas. Encontre o nome das colunas com o atributo `.columns`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "_Ar660PYRdZ2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "06d97672-d479-4ecf-ea18-bc83e181ae55"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['uid', 'nces_school_id', 'school_name', 'nces_district_id',\n",
              "       'district_name', 'date', 'school_year', 'year', 'time', 'day_of_week',\n",
              "       'city', 'state', 'school_type', 'enrollment', 'killed', 'injured',\n",
              "       'casualties', 'shooting_type', 'age_shooter1', 'gender_shooter1',\n",
              "       'race_ethnicity_shooter1', 'shooter_relationship1', 'shooter_deceased1',\n",
              "       'deceased_notes1', 'age_shooter2', 'gender_shooter2',\n",
              "       'race_ethnicity_shooter2', 'shooter_relationship2', 'shooter_deceased2',\n",
              "       'deceased_notes2', 'white', 'black', 'hispanic', 'asian',\n",
              "       'american_indian_alaska_native', 'hawaiian_native_pacific_islander',\n",
              "       'two_or_more', 'resource_officer', 'weapon', 'weapon_source', 'lat',\n",
              "       'long', 'staffing', 'low_grade', 'high_grade', 'lunch', 'county',\n",
              "       'state_fips', 'county_fips', 'ulocale'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "#Seu código aqu\n",
        "data.columns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZBmXhQdtRhxQ"
      },
      "source": [
        "Bom! Isso já dá uma boa visão sobre a tabela com a qual você está lidando"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KerA7VYVMnuO"
      },
      "source": [
        "# Criar e apagar coluna"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "indlrrdJMtaG"
      },
      "source": [
        "Bom, agora nós sabemos exatamente o tamanho e as colunas de nossa tabela. Mas você percebeu que tem colunas extra que as descritas na \"descrição das colunas\". Sabemos que, se os dados não tem descrição ele pode acabar alterando o sentido e o modo de fazer pesquisa, logo precisamos apagar essas colunas \"inúteis\" para que não ocasione isso."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "w2x1FsB9TS2W"
      },
      "source": [
        "Para não ocasionar erro, vou tirá-la com o método `.drop()`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "0bbtcuijToGQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "outputId": "feac979a-9e71-4f42-c2d5-8366d7c96603"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "\"['casualties'] not found in axis\"",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-11-a4a54d42c014>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"casualties\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5579\u001b[0m                 \u001b[0mweight\u001b[0m  \u001b[0;36m1.0\u001b[0m     \u001b[0;36m0.8\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5580\u001b[0m         \"\"\"\n\u001b[0;32m-> 5581\u001b[0;31m         return super().drop(\n\u001b[0m\u001b[1;32m   5582\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5583\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4786\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4787\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4788\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4789\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4790\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4828\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4829\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4830\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4831\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_axis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4832\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   7068\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7069\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 7070\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask].tolist()} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   7071\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7072\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: \"['casualties'] not found in axis\""
          ]
        }
      ],
      "source": [
        "data = data.drop(columns=[\"casualties\"])\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ks5vyMU9N6q-"
      },
      "source": [
        "Se percebeu, acabei de apagar a coluna \"casualties\" que era um dos atributos não descrito. Agora é sua vez, identifique as colunas não descritas e apague elas do dataset"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "blW3g_SiOOmv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 739
        },
        "outputId": "86909760-1736-44bc-bf06-4f78b4e7051b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     uid nces_school_id                             school_name  \\\n",
              "0      1   080480000707                   Columbine High School   \n",
              "1      2   220054000422             Scotlandville Middle School   \n",
              "2      3   130441001591                    Heritage High School   \n",
              "3      4   421899003847                John Bartram High School   \n",
              "4      5   250279000225                  Dorchester High School   \n",
              "..   ...            ...                                     ...   \n",
              "382  386   421899007517  E. Washington Rhodes Elementary School   \n",
              "383  387   110003000008                   Roosevelt High School   \n",
              "384  390       00600937                         St. John's Prep   \n",
              "385  389   421917006047                 Oliver Citywide Academy   \n",
              "386  391   260021001494         Michigan Collegiate High School   \n",
              "\n",
              "     nces_district_id                         district_name       date  \\\n",
              "0            804800.0                  Jefferson County R-1  4/20/1999   \n",
              "1           2200540.0  East Baton Rouge Parish School Board  4/22/1999   \n",
              "2           1304410.0                       Rockdale County  5/20/1999   \n",
              "3           4218990.0                  Philadelphia City SD  10/4/1999   \n",
              "4           2502790.0                                Boston  11/3/1999   \n",
              "..                ...                                   ...        ...   \n",
              "382         4218990.0                  Philadelphia City Sd   5/8/2023   \n",
              "383         1100030.0   District Of Columbia Public Schools  5/17/2023   \n",
              "384               NaN                                   NaN  5/22/2023   \n",
              "385         4219170.0                         Pittsburgh Sd  5/24/2023   \n",
              "386         2600210.0             Conner Creek Academy East   6/5/2023   \n",
              "\n",
              "    school_year  year      time day_of_week  ...           weapon_source  \\\n",
              "0     1998-1999  1999  11:19 AM     Tuesday  ...  purchased from friends   \n",
              "1     1998-1999  1999  12:30 PM    Thursday  ...                     NaN   \n",
              "2     1998-1999  1999   8:03 AM    Thursday  ...                     NaN   \n",
              "3     1999-2000  1999  10:00 AM      Monday  ...   purchased from friend   \n",
              "4     1999-2000  1999   7:40 AM   Wednesday  ...                     NaN   \n",
              "..          ...   ...       ...         ...  ...                     ...   \n",
              "382   2022-2023  2023  11:30 AM      Monday  ...                     NaN   \n",
              "383   2022-2023  2023   2:25 PM   Wednesday  ...                     NaN   \n",
              "384   2022-2023  2023       NaN      Monday  ...                     NaN   \n",
              "385   2022-2023  2023   7:30 AM   Wednesday  ...                     NaN   \n",
              "386   2022-2023  2023   2:40 PM      Monday  ...                     NaN   \n",
              "\n",
              "           long staffing low_grade  high_grade  lunch  \\\n",
              "0   -105.075000    89.60         9          12     41   \n",
              "1    -91.169966    39.00         6           8    495   \n",
              "2    -84.047960    84.00         9          12    125   \n",
              "3    -75.234108    41.00         9          12   2007   \n",
              "4    -71.075901      NaN         9          12    543   \n",
              "..          ...      ...       ...         ...    ...   \n",
              "382  -75.178100    41.37        KG           8    403   \n",
              "383  -77.029177    67.90         9          12    392   \n",
              "384  -70.952603   176.30         6          12    NaN   \n",
              "385  -80.024121    22.63         3          12     88   \n",
              "386  -83.066681    24.84         6          12    595   \n",
              "\n",
              "                      county  state_fips county_fips ulocale  \n",
              "0           Jefferson County           8        8059    21.0  \n",
              "1    East Baton Rouge Parish          22       22033    12.0  \n",
              "2            Rockdale County          13       13247    21.0  \n",
              "3        Philadelphia County          42       42101    11.0  \n",
              "4             Suffolk County          25       25025    11.0  \n",
              "..                       ...         ...         ...     ...  \n",
              "382      Philadelphia County          42       42101    11.0  \n",
              "383     District Of Columbia          11       11001    11.0  \n",
              "384             Essex County          25       25009    21.0  \n",
              "385         Allegheny County          42       42003    11.0  \n",
              "386            Macomb County          26       26099    12.0  \n",
              "\n",
              "[387 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-34120007-88c8-4695-b3b8-0ae16df6ffd3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>uid</th>\n",
              "      <th>nces_school_id</th>\n",
              "      <th>school_name</th>\n",
              "      <th>nces_district_id</th>\n",
              "      <th>district_name</th>\n",
              "      <th>date</th>\n",
              "      <th>school_year</th>\n",
              "      <th>year</th>\n",
              "      <th>time</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>...</th>\n",
              "      <th>weapon_source</th>\n",
              "      <th>long</th>\n",
              "      <th>staffing</th>\n",
              "      <th>low_grade</th>\n",
              "      <th>high_grade</th>\n",
              "      <th>lunch</th>\n",
              "      <th>county</th>\n",
              "      <th>state_fips</th>\n",
              "      <th>county_fips</th>\n",
              "      <th>ulocale</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>080480000707</td>\n",
              "      <td>Columbine High School</td>\n",
              "      <td>804800.0</td>\n",
              "      <td>Jefferson County R-1</td>\n",
              "      <td>4/20/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>11:19 AM</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>...</td>\n",
              "      <td>purchased from friends</td>\n",
              "      <td>-105.075000</td>\n",
              "      <td>89.60</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>Jefferson County</td>\n",
              "      <td>8</td>\n",
              "      <td>8059</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>220054000422</td>\n",
              "      <td>Scotlandville Middle School</td>\n",
              "      <td>2200540.0</td>\n",
              "      <td>East Baton Rouge Parish School Board</td>\n",
              "      <td>4/22/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>12:30 PM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-91.169966</td>\n",
              "      <td>39.00</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>495</td>\n",
              "      <td>East Baton Rouge Parish</td>\n",
              "      <td>22</td>\n",
              "      <td>22033</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>130441001591</td>\n",
              "      <td>Heritage High School</td>\n",
              "      <td>1304410.0</td>\n",
              "      <td>Rockdale County</td>\n",
              "      <td>5/20/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>8:03 AM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-84.047960</td>\n",
              "      <td>84.00</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>125</td>\n",
              "      <td>Rockdale County</td>\n",
              "      <td>13</td>\n",
              "      <td>13247</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>421899003847</td>\n",
              "      <td>John Bartram High School</td>\n",
              "      <td>4218990.0</td>\n",
              "      <td>Philadelphia City SD</td>\n",
              "      <td>10/4/1999</td>\n",
              "      <td>1999-2000</td>\n",
              "      <td>1999</td>\n",
              "      <td>10:00 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>purchased from friend</td>\n",
              "      <td>-75.234108</td>\n",
              "      <td>41.00</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>2007</td>\n",
              "      <td>Philadelphia County</td>\n",
              "      <td>42</td>\n",
              "      <td>42101</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>250279000225</td>\n",
              "      <td>Dorchester High School</td>\n",
              "      <td>2502790.0</td>\n",
              "      <td>Boston</td>\n",
              "      <td>11/3/1999</td>\n",
              "      <td>1999-2000</td>\n",
              "      <td>1999</td>\n",
              "      <td>7:40 AM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-71.075901</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>543</td>\n",
              "      <td>Suffolk County</td>\n",
              "      <td>25</td>\n",
              "      <td>25025</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>386</td>\n",
              "      <td>421899007517</td>\n",
              "      <td>E. Washington Rhodes Elementary School</td>\n",
              "      <td>4218990.0</td>\n",
              "      <td>Philadelphia City Sd</td>\n",
              "      <td>5/8/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>11:30 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-75.178100</td>\n",
              "      <td>41.37</td>\n",
              "      <td>KG</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>Philadelphia County</td>\n",
              "      <td>42</td>\n",
              "      <td>42101</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>387</td>\n",
              "      <td>110003000008</td>\n",
              "      <td>Roosevelt High School</td>\n",
              "      <td>1100030.0</td>\n",
              "      <td>District Of Columbia Public Schools</td>\n",
              "      <td>5/17/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>2:25 PM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-77.029177</td>\n",
              "      <td>67.90</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>392</td>\n",
              "      <td>District Of Columbia</td>\n",
              "      <td>11</td>\n",
              "      <td>11001</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>390</td>\n",
              "      <td>00600937</td>\n",
              "      <td>St. John's Prep</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5/22/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-70.952603</td>\n",
              "      <td>176.30</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Essex County</td>\n",
              "      <td>25</td>\n",
              "      <td>25009</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>389</td>\n",
              "      <td>421917006047</td>\n",
              "      <td>Oliver Citywide Academy</td>\n",
              "      <td>4219170.0</td>\n",
              "      <td>Pittsburgh Sd</td>\n",
              "      <td>5/24/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>7:30 AM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-80.024121</td>\n",
              "      <td>22.63</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>88</td>\n",
              "      <td>Allegheny County</td>\n",
              "      <td>42</td>\n",
              "      <td>42003</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>391</td>\n",
              "      <td>260021001494</td>\n",
              "      <td>Michigan Collegiate High School</td>\n",
              "      <td>2600210.0</td>\n",
              "      <td>Conner Creek Academy East</td>\n",
              "      <td>6/5/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>2:40 PM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-83.066681</td>\n",
              "      <td>24.84</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>595</td>\n",
              "      <td>Macomb County</td>\n",
              "      <td>26</td>\n",
              "      <td>26099</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34120007-88c8-4695-b3b8-0ae16df6ffd3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-34120007-88c8-4695-b3b8-0ae16df6ffd3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-34120007-88c8-4695-b3b8-0ae16df6ffd3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f0441b91-669d-4349-a6da-a909656e76c2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0441b91-669d-4349-a6da-a909656e76c2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f0441b91-669d-4349-a6da-a909656e76c2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_28116726-4a01-4f57-887c-5c1f52849705\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_28116726-4a01-4f57-887c-5c1f52849705 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "#Seu código aqui\n",
        "data = data.drop(columns=[\"lat\"])\n",
        "data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yVaze4P1SxYt"
      },
      "source": [
        "Você pode também acrescentar uma coluna que seja necessária para os dados, como no exemplo abaixo:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "dtBwt6PVTJs7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 719
        },
        "outputId": "c32436de-e50a-464c-9241-5f8fd5a8c637"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     uid nces_school_id                             school_name  \\\n",
              "0      1   080480000707                   Columbine High School   \n",
              "1      2   220054000422             Scotlandville Middle School   \n",
              "2      3   130441001591                    Heritage High School   \n",
              "3      4   421899003847                John Bartram High School   \n",
              "4      5   250279000225                  Dorchester High School   \n",
              "..   ...            ...                                     ...   \n",
              "382  386   421899007517  E. Washington Rhodes Elementary School   \n",
              "383  387   110003000008                   Roosevelt High School   \n",
              "384  390       00600937                         St. John's Prep   \n",
              "385  389   421917006047                 Oliver Citywide Academy   \n",
              "386  391   260021001494         Michigan Collegiate High School   \n",
              "\n",
              "     nces_district_id                         district_name       date  \\\n",
              "0            804800.0                  Jefferson County R-1  4/20/1999   \n",
              "1           2200540.0  East Baton Rouge Parish School Board  4/22/1999   \n",
              "2           1304410.0                       Rockdale County  5/20/1999   \n",
              "3           4218990.0                  Philadelphia City SD  10/4/1999   \n",
              "4           2502790.0                                Boston  11/3/1999   \n",
              "..                ...                                   ...        ...   \n",
              "382         4218990.0                  Philadelphia City Sd   5/8/2023   \n",
              "383         1100030.0   District Of Columbia Public Schools  5/17/2023   \n",
              "384               NaN                                   NaN  5/22/2023   \n",
              "385         4219170.0                         Pittsburgh Sd  5/24/2023   \n",
              "386         2600210.0             Conner Creek Academy East   6/5/2023   \n",
              "\n",
              "    school_year  year      time day_of_week  ...        long staffing  \\\n",
              "0     1998-1999  1999  11:19 AM     Tuesday  ... -105.075000    89.60   \n",
              "1     1998-1999  1999  12:30 PM    Thursday  ...  -91.169966    39.00   \n",
              "2     1998-1999  1999   8:03 AM    Thursday  ...  -84.047960    84.00   \n",
              "3     1999-2000  1999  10:00 AM      Monday  ...  -75.234108    41.00   \n",
              "4     1999-2000  1999   7:40 AM   Wednesday  ...  -71.075901      NaN   \n",
              "..          ...   ...       ...         ...  ...         ...      ...   \n",
              "382   2022-2023  2023  11:30 AM      Monday  ...  -75.178100    41.37   \n",
              "383   2022-2023  2023   2:25 PM   Wednesday  ...  -77.029177    67.90   \n",
              "384   2022-2023  2023       NaN      Monday  ...  -70.952603   176.30   \n",
              "385   2022-2023  2023   7:30 AM   Wednesday  ...  -80.024121    22.63   \n",
              "386   2022-2023  2023   2:40 PM      Monday  ...  -83.066681    24.84   \n",
              "\n",
              "    low_grade high_grade  lunch                   county state_fips  \\\n",
              "0           9         12     41         Jefferson County          8   \n",
              "1           6          8    495  East Baton Rouge Parish         22   \n",
              "2           9         12    125          Rockdale County         13   \n",
              "3           9         12   2007      Philadelphia County         42   \n",
              "4           9         12    543           Suffolk County         25   \n",
              "..        ...        ...    ...                      ...        ...   \n",
              "382        KG          8    403      Philadelphia County         42   \n",
              "383         9         12    392     District Of Columbia         11   \n",
              "384         6         12    NaN             Essex County         25   \n",
              "385         3         12     88         Allegheny County         42   \n",
              "386         6         12    595            Macomb County         26   \n",
              "\n",
              "     county_fips ulocale Teste  \n",
              "0           8059    21.0     0  \n",
              "1          22033    12.0     1  \n",
              "2          13247    21.0     2  \n",
              "3          42101    11.0     3  \n",
              "4          25025    11.0     4  \n",
              "..           ...     ...   ...  \n",
              "382        42101    11.0   382  \n",
              "383        11001    11.0   383  \n",
              "384        25009    21.0   384  \n",
              "385        42003    11.0   385  \n",
              "386        26099    12.0   386  \n",
              "\n",
              "[387 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-03f41bb0-f89e-4957-81d3-93f51fcf7fa7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>uid</th>\n",
              "      <th>nces_school_id</th>\n",
              "      <th>school_name</th>\n",
              "      <th>nces_district_id</th>\n",
              "      <th>district_name</th>\n",
              "      <th>date</th>\n",
              "      <th>school_year</th>\n",
              "      <th>year</th>\n",
              "      <th>time</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>...</th>\n",
              "      <th>long</th>\n",
              "      <th>staffing</th>\n",
              "      <th>low_grade</th>\n",
              "      <th>high_grade</th>\n",
              "      <th>lunch</th>\n",
              "      <th>county</th>\n",
              "      <th>state_fips</th>\n",
              "      <th>county_fips</th>\n",
              "      <th>ulocale</th>\n",
              "      <th>Teste</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>080480000707</td>\n",
              "      <td>Columbine High School</td>\n",
              "      <td>804800.0</td>\n",
              "      <td>Jefferson County R-1</td>\n",
              "      <td>4/20/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>11:19 AM</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>...</td>\n",
              "      <td>-105.075000</td>\n",
              "      <td>89.60</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>Jefferson County</td>\n",
              "      <td>8</td>\n",
              "      <td>8059</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>220054000422</td>\n",
              "      <td>Scotlandville Middle School</td>\n",
              "      <td>2200540.0</td>\n",
              "      <td>East Baton Rouge Parish School Board</td>\n",
              "      <td>4/22/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>12:30 PM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>-91.169966</td>\n",
              "      <td>39.00</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>495</td>\n",
              "      <td>East Baton Rouge Parish</td>\n",
              "      <td>22</td>\n",
              "      <td>22033</td>\n",
              "      <td>12.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>130441001591</td>\n",
              "      <td>Heritage High School</td>\n",
              "      <td>1304410.0</td>\n",
              "      <td>Rockdale County</td>\n",
              "      <td>5/20/1999</td>\n",
              "      <td>1998-1999</td>\n",
              "      <td>1999</td>\n",
              "      <td>8:03 AM</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>...</td>\n",
              "      <td>-84.047960</td>\n",
              "      <td>84.00</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>125</td>\n",
              "      <td>Rockdale County</td>\n",
              "      <td>13</td>\n",
              "      <td>13247</td>\n",
              "      <td>21.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>421899003847</td>\n",
              "      <td>John Bartram High School</td>\n",
              "      <td>4218990.0</td>\n",
              "      <td>Philadelphia City SD</td>\n",
              "      <td>10/4/1999</td>\n",
              "      <td>1999-2000</td>\n",
              "      <td>1999</td>\n",
              "      <td>10:00 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>-75.234108</td>\n",
              "      <td>41.00</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>2007</td>\n",
              "      <td>Philadelphia County</td>\n",
              "      <td>42</td>\n",
              "      <td>42101</td>\n",
              "      <td>11.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>250279000225</td>\n",
              "      <td>Dorchester High School</td>\n",
              "      <td>2502790.0</td>\n",
              "      <td>Boston</td>\n",
              "      <td>11/3/1999</td>\n",
              "      <td>1999-2000</td>\n",
              "      <td>1999</td>\n",
              "      <td>7:40 AM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>-71.075901</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>543</td>\n",
              "      <td>Suffolk County</td>\n",
              "      <td>25</td>\n",
              "      <td>25025</td>\n",
              "      <td>11.0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>386</td>\n",
              "      <td>421899007517</td>\n",
              "      <td>E. Washington Rhodes Elementary School</td>\n",
              "      <td>4218990.0</td>\n",
              "      <td>Philadelphia City Sd</td>\n",
              "      <td>5/8/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>11:30 AM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>-75.178100</td>\n",
              "      <td>41.37</td>\n",
              "      <td>KG</td>\n",
              "      <td>8</td>\n",
              "      <td>403</td>\n",
              "      <td>Philadelphia County</td>\n",
              "      <td>42</td>\n",
              "      <td>42101</td>\n",
              "      <td>11.0</td>\n",
              "      <td>382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>387</td>\n",
              "      <td>110003000008</td>\n",
              "      <td>Roosevelt High School</td>\n",
              "      <td>1100030.0</td>\n",
              "      <td>District Of Columbia Public Schools</td>\n",
              "      <td>5/17/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>2:25 PM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>-77.029177</td>\n",
              "      <td>67.90</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>392</td>\n",
              "      <td>District Of Columbia</td>\n",
              "      <td>11</td>\n",
              "      <td>11001</td>\n",
              "      <td>11.0</td>\n",
              "      <td>383</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>390</td>\n",
              "      <td>00600937</td>\n",
              "      <td>St. John's Prep</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5/22/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>-70.952603</td>\n",
              "      <td>176.30</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Essex County</td>\n",
              "      <td>25</td>\n",
              "      <td>25009</td>\n",
              "      <td>21.0</td>\n",
              "      <td>384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>389</td>\n",
              "      <td>421917006047</td>\n",
              "      <td>Oliver Citywide Academy</td>\n",
              "      <td>4219170.0</td>\n",
              "      <td>Pittsburgh Sd</td>\n",
              "      <td>5/24/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>7:30 AM</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>...</td>\n",
              "      <td>-80.024121</td>\n",
              "      <td>22.63</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>88</td>\n",
              "      <td>Allegheny County</td>\n",
              "      <td>42</td>\n",
              "      <td>42003</td>\n",
              "      <td>11.0</td>\n",
              "      <td>385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>391</td>\n",
              "      <td>260021001494</td>\n",
              "      <td>Michigan Collegiate High School</td>\n",
              "      <td>2600210.0</td>\n",
              "      <td>Conner Creek Academy East</td>\n",
              "      <td>6/5/2023</td>\n",
              "      <td>2022-2023</td>\n",
              "      <td>2023</td>\n",
              "      <td>2:40 PM</td>\n",
              "      <td>Monday</td>\n",
              "      <td>...</td>\n",
              "      <td>-83.066681</td>\n",
              "      <td>24.84</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>595</td>\n",
              "      <td>Macomb County</td>\n",
              "      <td>26</td>\n",
              "      <td>26099</td>\n",
              "      <td>12.0</td>\n",
              "      <td>386</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03f41bb0-f89e-4957-81d3-93f51fcf7fa7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-03f41bb0-f89e-4957-81d3-93f51fcf7fa7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-03f41bb0-f89e-4957-81d3-93f51fcf7fa7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ad192e2d-0e60-4bf2-9d99-9c6922ecedca\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad192e2d-0e60-4bf2-9d99-9c6922ecedca')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ad192e2d-0e60-4bf2-9d99-9c6922ecedca button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_ae59c620-919e-4ebb-8e43-6f1b133ebf97\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ae59c620-919e-4ebb-8e43-6f1b133ebf97 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "data['Teste'] = list(range(len(data)))\n",
        "data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Dk8Y73bFPE0E"
      },
      "source": [
        "O código procura a existência da coluna Teste no método `list()`, caso ela não exista ele cria gerando números que representam a posição da coluna. o `range()` significa o faça e o `len()` pega o tamanho do seu dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "n9MvLfoYPjgR"
      },
      "source": [
        "Agora é sua vez, apague a coluna Teste criada e crie uma nova que possa colaborar com o dataset que estamos utilizando"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "cNh3GCX3Puk3"
      },
      "outputs": [],
      "source": [
        "#Seu código aqui\n",
        "data[\"Bairro\"] = list(range(len(data)))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VeK_VNKNRwpZ"
      },
      "source": [
        "### Descrição estatística"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "h46j-Ei1R3Id"
      },
      "source": [
        "Ok, dimensionamos a tabela e vimos o nome das colunas, mas isso ainda é o começo, precisamos saber como manipular essa tabela. Uma forma interessante de acessar os dados da tabela é com a seguinte sintaxe:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "nGLFr6YFSWgQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "outputId": "5cded3d0-8ded-4ff9-e385-e9daaf2b0af4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        m\n",
              "1        m\n",
              "2        m\n",
              "3        m\n",
              "4        m\n",
              "      ... \n",
              "382    NaN\n",
              "383    NaN\n",
              "384      m\n",
              "385      m\n",
              "386      m\n",
              "Name: gender_shooter1, Length: 387, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>gender_shooter1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>m</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>387 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ],
      "source": [
        "genders = data['gender_shooter1']\n",
        "genders"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RM46zrbnSec-"
      },
      "source": [
        "O que isso quer dizer? Bem, a sintaxe `data['gender_shooter1']` acessa a coluna gender_shooter1 do DataFrame data, essa coluna foi armazenada na variável genders e apresentada."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "N_wKbEm_UM4i"
      },
      "source": [
        "Ok, temos acesso às colunas do DataFrame, isso é bom, isso quer dizer que podemos tirar algumas conclusões: Vamos, por exemplo, tirar a média das vitimas fatais"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "poo3Sf4uVXfq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bcf83a9c-ae1f-43ea-f625-df5ba2c9418d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.float64(354.40318302387266)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "average_lat = data[\"killed\"].mean()\n",
        "average_lat"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8RuyAEGGVi_4"
      },
      "source": [
        "O método `.mean()` calcula médias em listas rapidamente, não precisamos fazer nenhuma conta, isso é no mínimo excelente.\n",
        "\n",
        "Agora é sua vez: Calcule a média das pessoas negras assassinadas."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "A3osbe8kV_nD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e253cb6d-eaee-4bb8-f236-2b6ffbef9723"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.float64(354.40318302387266)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "#Seu código aqui\n",
        "average_lat = data[\"black\"].mean()\n",
        "average_lat"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OnVkMGSgWGwK"
      },
      "source": [
        "Excelente, fizemos uma análise interessante sobre os dados do DataFrame, porém fazer isso para todas colunas é extremamente chato. Entretanto, existe uma forma fantástica de descrever os valores em um DataFrame, teste abaixo o método `.describe()`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "YGdr_DAWWlC-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "cc4ae2d8-6f40-44cb-af62-0076bba02831"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              uid  nces_district_id         year      killed     injured  \\\n",
              "count  387.000000      3.630000e+02   387.000000  387.000000  387.000000   \n",
              "mean   194.542636      2.683346e+06  2014.204134    0.519380    1.108527   \n",
              "std    112.678322      1.638245e+06     7.452592    2.171772    2.215958   \n",
              "min      1.000000      1.000080e+05  1999.000000    0.000000    0.000000   \n",
              "25%     97.500000      1.200480e+06  2008.000000    0.000000    0.000000   \n",
              "50%    194.000000      2.614280e+06  2017.000000    0.000000    1.000000   \n",
              "75%    290.500000      4.155394e+06  2021.000000    0.000000    1.000000   \n",
              "max    391.000000      5.516470e+06  2023.000000   26.000000   21.000000   \n",
              "\n",
              "       age_shooter1  shooter_deceased1  age_shooter2  shooter_deceased2  \\\n",
              "count    274.000000         262.000000     12.000000           6.000000   \n",
              "mean      19.284672           0.152672     16.916667           0.166667   \n",
              "std        9.748823           0.360359      1.505042           0.408248   \n",
              "min        6.000000           0.000000     15.000000           0.000000   \n",
              "25%       15.000000           0.000000     15.750000           0.000000   \n",
              "50%       16.000000           0.000000     17.000000           0.000000   \n",
              "75%       19.000000           0.000000     18.000000           0.000000   \n",
              "max       72.000000           1.000000     20.000000           1.000000   \n",
              "\n",
              "             white  ...  american_indian_alaska_native  \\\n",
              "count   377.000000  ...                     376.000000   \n",
              "mean    375.193634  ...                       8.436170   \n",
              "std     464.915289  ...                      25.989355   \n",
              "min       0.000000  ...                       0.000000   \n",
              "25%      14.000000  ...                       0.000000   \n",
              "50%     150.000000  ...                       2.000000   \n",
              "75%     592.000000  ...                       6.000000   \n",
              "max    2256.000000  ...                     331.000000   \n",
              "\n",
              "       hawaiian_native_pacific_islander  two_or_more  resource_officer  \\\n",
              "count                        262.000000   262.000000        387.000000   \n",
              "mean                           5.015267    31.683206          0.271318   \n",
              "std                           23.552659    37.592018          0.445215   \n",
              "min                            0.000000     0.000000          0.000000   \n",
              "25%                            0.000000     4.250000          0.000000   \n",
              "50%                            1.000000    17.000000          0.000000   \n",
              "75%                            2.000000    46.750000          1.000000   \n",
              "max                          338.000000   199.000000          1.000000   \n",
              "\n",
              "             long    staffing  state_fips   county_fips     ulocale  \\\n",
              "count  386.000000  363.000000  387.000000    387.000000  384.000000   \n",
              "mean   -92.176124   61.546846   26.679587  26776.191214   19.947917   \n",
              "std     15.553162   38.739547   16.130641  16166.320448   10.668633   \n",
              "min   -157.837200    3.000000    1.000000   1009.000000   11.000000   \n",
              "25%    -97.506534   31.210000   12.000000  12061.000000   11.000000   \n",
              "50%    -87.582092   55.300000   26.000000  26125.000000   13.000000   \n",
              "75%    -80.818711   86.050000   41.000000  41045.000000   22.000000   \n",
              "max    -70.952603  203.320000   55.000000  55139.000000   43.000000   \n",
              "\n",
              "           Bairro  \n",
              "count  387.000000  \n",
              "mean   193.000000  \n",
              "std    111.861522  \n",
              "min      0.000000  \n",
              "25%     96.500000  \n",
              "50%    193.000000  \n",
              "75%    289.500000  \n",
              "max    386.000000  \n",
              "\n",
              "[8 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-23f0225b-1f5b-45ac-add1-7a84eb8bdd2a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>uid</th>\n",
              "      <th>nces_district_id</th>\n",
              "      <th>year</th>\n",
              "      <th>killed</th>\n",
              "      <th>injured</th>\n",
              "      <th>age_shooter1</th>\n",
              "      <th>shooter_deceased1</th>\n",
              "      <th>age_shooter2</th>\n",
              "      <th>shooter_deceased2</th>\n",
              "      <th>white</th>\n",
              "      <th>...</th>\n",
              "      <th>american_indian_alaska_native</th>\n",
              "      <th>hawaiian_native_pacific_islander</th>\n",
              "      <th>two_or_more</th>\n",
              "      <th>resource_officer</th>\n",
              "      <th>long</th>\n",
              "      <th>staffing</th>\n",
              "      <th>state_fips</th>\n",
              "      <th>county_fips</th>\n",
              "      <th>ulocale</th>\n",
              "      <th>Bairro</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>387.000000</td>\n",
              "      <td>3.630000e+02</td>\n",
              "      <td>387.000000</td>\n",
              "      <td>387.000000</td>\n",
              "      <td>387.000000</td>\n",
              "      <td>274.000000</td>\n",
              "      <td>262.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>377.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>376.000000</td>\n",
              "      <td>262.000000</td>\n",
              "      <td>262.000000</td>\n",
              "      <td>387.000000</td>\n",
              "      <td>386.000000</td>\n",
              "      <td>363.000000</td>\n",
              "      <td>387.000000</td>\n",
              "      <td>387.000000</td>\n",
              "      <td>384.000000</td>\n",
              "      <td>387.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>194.542636</td>\n",
              "      <td>2.683346e+06</td>\n",
              "      <td>2014.204134</td>\n",
              "      <td>0.519380</td>\n",
              "      <td>1.108527</td>\n",
              "      <td>19.284672</td>\n",
              "      <td>0.152672</td>\n",
              "      <td>16.916667</td>\n",
              "      <td>0.166667</td>\n",
              "      <td>375.193634</td>\n",
              "      <td>...</td>\n",
              "      <td>8.436170</td>\n",
              "      <td>5.015267</td>\n",
              "      <td>31.683206</td>\n",
              "      <td>0.271318</td>\n",
              "      <td>-92.176124</td>\n",
              "      <td>61.546846</td>\n",
              "      <td>26.679587</td>\n",
              "      <td>26776.191214</td>\n",
              "      <td>19.947917</td>\n",
              "      <td>193.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>112.678322</td>\n",
              "      <td>1.638245e+06</td>\n",
              "      <td>7.452592</td>\n",
              "      <td>2.171772</td>\n",
              "      <td>2.215958</td>\n",
              "      <td>9.748823</td>\n",
              "      <td>0.360359</td>\n",
              "      <td>1.505042</td>\n",
              "      <td>0.408248</td>\n",
              "      <td>464.915289</td>\n",
              "      <td>...</td>\n",
              "      <td>25.989355</td>\n",
              "      <td>23.552659</td>\n",
              "      <td>37.592018</td>\n",
              "      <td>0.445215</td>\n",
              "      <td>15.553162</td>\n",
              "      <td>38.739547</td>\n",
              "      <td>16.130641</td>\n",
              "      <td>16166.320448</td>\n",
              "      <td>10.668633</td>\n",
              "      <td>111.861522</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000080e+05</td>\n",
              "      <td>1999.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-157.837200</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1009.000000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>97.500000</td>\n",
              "      <td>1.200480e+06</td>\n",
              "      <td>2008.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>15.750000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.250000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-97.506534</td>\n",
              "      <td>31.210000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>12061.000000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>96.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>194.000000</td>\n",
              "      <td>2.614280e+06</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>150.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-87.582092</td>\n",
              "      <td>55.300000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>26125.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>193.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>290.500000</td>\n",
              "      <td>4.155394e+06</td>\n",
              "      <td>2021.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>592.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>46.750000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-80.818711</td>\n",
              "      <td>86.050000</td>\n",
              "      <td>41.000000</td>\n",
              "      <td>41045.000000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>289.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>391.000000</td>\n",
              "      <td>5.516470e+06</td>\n",
              "      <td>2023.000000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2256.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>331.000000</td>\n",
              "      <td>338.000000</td>\n",
              "      <td>199.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-70.952603</td>\n",
              "      <td>203.320000</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>55139.000000</td>\n",
              "      <td>43.000000</td>\n",
              "      <td>386.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23f0225b-1f5b-45ac-add1-7a84eb8bdd2a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-23f0225b-1f5b-45ac-add1-7a84eb8bdd2a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-23f0225b-1f5b-45ac-add1-7a84eb8bdd2a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-85523a93-7713-49a9-a3df-7fa4b9ae0945\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85523a93-7713-49a9-a3df-7fa4b9ae0945')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-85523a93-7713-49a9-a3df-7fa4b9ae0945 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "data.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vENnDxPwWxWl"
      },
      "source": [
        "Note que o resultado mostra apenas as colunas com dados númericos, o que já ajuda bastante, mas seria bastante interessante analisarmos uma coluna como a \"school_name\", pois ela pode trazer algumas informações interessantes. Vamos fazer o seguinte: Vamos pegar a coluna do \"school_name\" e aplicar a função `.value_counts()`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "id": "JDW-FrToX0N5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 490
        },
        "outputId": "ae74a7b9-8b1f-407d-e648-97b4f1c7d28b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "school_name\n",
              "Central High School                    3\n",
              "Booker T. Washington High School       3\n",
              "Highland High School                   2\n",
              "Benjamin Banneker High School          2\n",
              "West High School                       2\n",
              "                                      ..\n",
              "Louisiana Schnell Elementary School    1\n",
              "Millard South High School              1\n",
              "Marinette High School                  1\n",
              "Kelly Elementary School                1\n",
              "Chardon High School                    1\n",
              "Name: count, Length: 370, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>school_name</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Central High School</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Booker T. Washington High School</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Highland High School</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Benjamin Banneker High School</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>West High School</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Louisiana Schnell Elementary School</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Millard South High School</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Marinette High School</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kelly Elementary School</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chardon High School</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>370 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "#Seu código aqui\n",
        "data[\"school_name\"].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EWPEpH4qX_hc"
      },
      "source": [
        "Essa é uma forma bem legal de analisar colunas de dados categóricos, mas tem um detalhe interessante: Se você somar todas quantidades acima, o resultado vai ser menor que o número de linhas.\n",
        "Para isto usamos a função `.sum()`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "mUAzf3MqYMEA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d94c9a53-6230-46da-f6bc-f654e134219b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(362)"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "data[\"district_name\"].value_counts().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sj-RHyG2YUGw"
      },
      "source": [
        "Que estranho, 387 linhas com informações sobre os casos, mas apenas 362 falam sobre o nome do distrito do ocorrido. A explicação é a seguinte: Algumas células do DataFrame estão com valores NaN (Not a Number) que representa uma célula que veio sem nenhum valor (Literalmente, não é pra ser considerado nem uma string vazia)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "L9qmI4GwY-xt"
      },
      "source": [
        "### Limpeza de dados"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e2aczmitZDAJ"
      },
      "source": [
        "Esses valores NaN são uma pedra no sapato para os programadores, mas são facilmente tratados. Mas antes de tratarmos, vamos ver se realmente existem NaN no DataFrame."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "id": "QYHZGfB_ZTGd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5e6d5796-8497-4cd6-e543-7a19fe9106c1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.True_"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ],
      "source": [
        "data.isna().values.any()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zXjfB1QoZfwD"
      },
      "source": [
        "A sequência acima faz a seguinte ação: Primeiro, aplica-se a função `.isna()`, que converte os valores do DataFrame para True caso sejam NaN e False caso não o sejam, depois o atributo `.values` retorna um array com todos esses Trues e Falses, a função `.any()` é aplicada sobre esse array e caso haja algum True (significando que existe um NaN) ele retorna True, caso contrário False.\n",
        "\n",
        "Resumo: Retorna True se tiver pelo menos um NaN"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5ZUoAHCAafUh"
      },
      "source": [
        "Ok, show, existem NaNs dentro do DataFrame, vamos então tratar esse problema, vamos aplicar a função `.fillna()` dentro da coluna de \"district_name\"."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "id": "D8G7Kf9Ha2aF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2ea839ce-6713-49d1-ed55-b4c55cf94549"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.False_"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ],
      "source": [
        "data[\"district_name\"].isna().values.any()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ok0Eu-3NTU5S"
      },
      "source": [
        "Agora nós podemos utilizar o `.fillna() `para colocar atributo nas células vazias no caso, colocando como no distrito de San Diego."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "id": "r4cahyUqa_DG"
      },
      "outputs": [],
      "source": [
        "data[\"district_name\"] = data[\"district_name\"].fillna(\"San Diego\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z4xDXg6IUFHa"
      },
      "source": [
        "Vamos testar agora se ainda existem NaN na nossa coluna."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "id": "rk0b4-0nbHgL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "44ad87af-be7d-42e6-a65f-65363ad43f38"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.False_"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ],
      "source": [
        "data[\"district_name\"].isna().values.any()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QZ-aF0K-bQIZ"
      },
      "source": [
        "Ok, antes existiam NaNs dentro da coluna \"district_name\", e com a função `.fillna() `inserimos o valor \"San Diego\" dentro desses NaNs e agora não existem mais NaNs na coluna. Lembrando que eu coloquei \"San Diego\" para preencher só por fins didáticos, quando preencher os valores NaNs tome cuidado com o valor que está inserindo."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jCi-tgWeb0YQ"
      },
      "source": [
        "Agora, se chamarmos o `.value_counts().sum()` vamos ver o que acontece:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "id": "x4EP2_N-b7G9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cc636896-a2cd-4adc-d55f-bf40c689685e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(387)"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ],
      "source": [
        "data[\"district_name\"].value_counts().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gO0jpYLkb8Fc"
      },
      "source": [
        "Que interessante, Agora vemos que se tornou de 387 linhas. Vamos aplicar apenas o `.value_counts()`\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "G2WJI0tLcFTs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 490
        },
        "outputId": "e05989c1-1a5a-4728-a1cb-6565790e3fab"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "district_name\n",
              "San Diego                               25\n",
              "Los Angeles Unified                      7\n",
              "City Of Chicago Sd 299                   5\n",
              "Charlotte-Mecklenburg Schools            4\n",
              "Philadelphia City SD                     4\n",
              "                                        ..\n",
              "Ridgeview Cusd 19                        1\n",
              "Geary                                    1\n",
              "Yuma Union High School District          1\n",
              "Granite District                         1\n",
              "East Baton Rouge Parish School Board     1\n",
              "Name: count, Length: 309, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>district_name</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>San Diego</th>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Los Angeles Unified</th>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City Of Chicago Sd 299</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Charlotte-Mecklenburg Schools</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Philadelphia City SD</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ridgeview Cusd 19</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Geary</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Yuma Union High School District</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Granite District</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>East Baton Rouge Parish School Board</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>309 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ],
      "source": [
        "data[\"district_name\"].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rI8YHexicHtT"
      },
      "source": [
        "Percebeu que agora San Diego aparece em primeiro com o total de 25 vezes chamado, interessante não?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1oCoR3kIVCrG"
      },
      "source": [
        "Bom, agora é sua vez de testar. Veja se a somatória da coluna **\"nces_district_id\"** é igual ao número de linhas, após veja se possui NaN e, se possuir, coloque o id **\"455098.7\"** como código. Depois de fazer isso, teste a somatória e veja se tem NaN para conferir se deu certo."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "id": "ABD3WPDicbAZ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5968c00c-7dad-4484-ecd5-19747ef58f1b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(363)"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ],
      "source": [
        "#Seu código aqui - somatória\n",
        "data[\"nces_district_id\"].value_counts().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "id": "MRHCL5iyV13N",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "677e25fb-caa5-4ba0-bbbf-e76efaef81f6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.False_"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ],
      "source": [
        "#Seu código aqui - NaN\n",
        "data[\"nces_district_id\"].isna().values.any()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "metadata": {
        "id": "sVza-wjBV3mc"
      },
      "outputs": [],
      "source": [
        "#Seu código aqui - id\n",
        "data[\"nces_district_id\"] = data[\"nces_district_id\"].fillna(\"455098.7\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "metadata": {
        "id": "WyjtoijKV6Ix",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9098a463-01e9-4c1f-c8b1-3c58267c5638"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(387)"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ],
      "source": [
        "#Seu código aqui - teste de somatória\n",
        "data[\"nces_district_id\"].value_counts().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "id": "pGoYpmq_V6W-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "87d71033-3fad-4dac-ba66-cabe181b9a9b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.False_"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ],
      "source": [
        "#Seu código aqui - teste de NaN\n",
        "data[\"nces_district_id\"].isna().values.any()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0STW2u97cjCJ"
      },
      "source": [
        "### Checando duplicadas"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Cxk2_0djcn4H"
      },
      "source": [
        "Não é muito importante verificar dados repetidos nesse DataFrame em específico porque é um DataFrame em que duas linhas iguais sinceramente não importam: Dois esquilos iguais podiam estar no mesmo lugar. Entretanto, em alguns DataFrames, ter linhas repetidas pode ser algo errado, nesse caso, pode ser interessante verificar as seguintes funções:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5r_cJr5ZdK5l"
      },
      "outputs": [],
      "source": [
        "data.duplicated().any()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gKz27ZhmdSpK"
      },
      "source": [
        "Ok, nesse DataFrame não existem duplicatas, mas caso houvesse, seria interessante aplicar a seguinte função:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hiaAB9QXdcVZ"
      },
      "outputs": [],
      "source": [
        "data = data.drop_duplicates()\n",
        "data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Pnpb2RB1dfGY"
      },
      "source": [
        "`.drop_duplicates()` remove duplicatas e retorna um DataFrame com essas duplicatas removidas, é bem interessante considerando que alguns DataFrames podem ter informações repetidas por erro humano."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oKiz2u8ejSJ2"
      },
      "source": [
        "###  Renomeando Colunas"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TDkoPQ1UjYdP"
      },
      "source": [
        "Renomear colunas em um DataFrame melhora a clareza e organização dos dados, transformando informações complexas em rótulos compreensíveis, facilitando assim a interpretação dos resultados. A biblioteca pandas do Python oferece uma função robusta para renomear colunas, permitindo personalização dos nomes para se alinhar melhor à natureza dos dados. Essa prática promove maior legibilidade, colaboração e precisão na análise dos dados.\n",
        "A função do pandas que permite renomear colunas em um DataFrame é chamada `.rename()`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "sb8LouySjRpF"
      },
      "outputs": [],
      "source": [
        "data = data.rename(columns= {'date': 'case_date'})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SvqZfqzVkHOh"
      },
      "outputs": [],
      "source": [
        "data.head(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PKNMBhAKkL4z"
      },
      "source": [
        "Agora é sua vez, renomeie as colunas que você julgar necessário para a compreensão.\n",
        "\n",
        "dica: utilize a descrição das colunas"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "I2OZT7KdkHvG"
      },
      "outputs": [],
      "source": [
        "#Seu código aqui"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Visto o dataset, quais os dados numéricos e dados categóricos? cite 2 exemplos de cada."
      ],
      "metadata": {
        "id": "4WeIbxn5CFi-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "//Sua resposta aqui"
      ],
      "metadata": {
        "id": "nd305mplCQcq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Percebeu se o dataset tinha algum enviezamento e/ou erro? Justifique"
      ],
      "metadata": {
        "id": "VuYLGd2I4ybz"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "//Sua resposta aqui"
      ],
      "metadata": {
        "id": "ZtjG6SIQ472k"
      }
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}